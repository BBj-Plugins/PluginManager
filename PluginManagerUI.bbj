use ::PluginManager/PluginManager.bbj::PluginManager

use ::PluginManager/src/Tag.bbj::Tag
use ::PluginManager/src/BBjPlugin.bbj::BBjPlugin
use ::PluginManager/src/RemoteBBjPlugin.bbj::RemoteBBjPlugin
use ::PluginManager/src/InstalledBBjPlugin.bbj::InstalledBBjPlugin
use ::PluginManager/src/ConfigurePluginProjectURLsWindow.bbj::ConfigurePluginProjectURLsWindow

use ::PluginManager/src/gui/InstalledPluginTab.bbj::InstalledPluginTab
use ::PluginManager/src/gui/RemotePluginTab.bbj::RemotePluginTab

use java.util.Iterator
use java.util.ArrayList
use java.util.HashMap

use java.text.SimpleDateFormat

class public PluginManagerUI

    field public static String INSTALL_PLUGIN_REQUEST! = "INSTALL_PLUGIN_REQUEST"
    
    field public static String UPDATE_PLUGIN_REQUEST! = "UPDATE_PLUGIN_REQUEST" 
    field public static String UNINSTALL_PLUGIN_REQUEST! = "UNINSTALL_PLUGIN_REQUEST"

    field private PluginManager pluginManager!

    field private BBjSysGui sysGui!
    field private BBjTabCtrl tabCtrl!
    field private BBjTopLevelWindow window!
    field private BBjMenuBar mainWindowMenuBar!

    field private RemotePluginTab remoteTab!
    field private InstalledPluginTab installedTab!

    field private ConfigurePluginProjectURLsWindow configurePluginProjectURLsWindow!

    method public PluginManagerUI()
        #pluginManager! = new PluginManager()
        #configurePluginProjectURLsWindow! = new ConfigurePluginProjectURLsWindow(#pluginManager!, #this!)
        #init()
    methodend

    method private void init()
        #sysGui! = BBjAPI().openSysGui("X0")

        window_width = 1000
        window_height = 600

        declare java.awt.Rectangle screenBounds!
        screenBounds! = #sysGui!.getSystemMetrics().getScreenBounds()

        screen_width = screenBounds!.getWidth()
        screen_height = screenBounds!.getHeight()
        #window! = #sysGui!.addWindow(100, (screen_width/2 - window_width/2), (screen_height/2 - window_height/2), window_width, window_height, "Plugin Manager", $00000002$)
        #window!.setCallback(BBjAPI.ON_CLOSE, #this!, "closeWindow")
        #window!.setCallback(BBjAPI.ON_RESIZE, #this!, "resizeWindow")

        window_next_id = #window!.getAvailableControlID()
        #mainWindowMenuBar! = cast(BBjMenuBar, #window!.addMenuBar())

        window_next_id = #window!.getAvailableControlID()
        mainWindowMenuConfigure!  = cast(BBjMenu, #mainWindowMenuBar!.addMenu(window_next_id, "Configure"))

REM         window_next_id = #window!.getAvailableControlID()
REM         menuItemImportPlugins! = cast(BBjMenuItem, mainWindowMenuConfigure!.addMenuItem(window_next_id, "Import Plugins"))
REM         menuItemImportPlugins!.setEnabled(0)
REM         
REM         window_next_id = #window!.getAvailableControlID()
REM         menuItemExportPlugins! = cast(BBjMenuItem, mainWindowMenuConfigure!.addMenuItem(window_next_id, "Export Installed Plugins"))
REM         menuItemExportPlugins!.setEnabled(0)

REM         mainWindowMenuConfigure!.insertSeparator(2)

        window_next_id = #window!.getAvailableControlID()
        menuItemCustomizePluginProjectURLs! = cast(BBjMenuItem, mainWindowMenuConfigure!.addMenuItem(window_next_id, "Customize Plugin Project URLs"))

        menuItemCustomizePluginProjectURLs!.setCallback(BBjMenuItem.ON_MENU_ITEM_SELECT, #this!, "customizePluginProjectURLsMenuItemSelected")

        row_x = 10
        row_y = 50
        
        tab_width = window_width-20
        tab_height = window_height-row_y-10
        window_next_id = #window!.getAvailableControlID()
        #tabCtrl! = #window!.addTabCtrl(window_next_id, row_x, row_y, tab_width, tab_height)

        #installedTab! = new InstalledPluginTab(#window!, #tabCtrl!.getWidth(), #tabCtrl!.getHeight(), #sysGui!)
        #installedTab!.updateTabEntries(#pluginManager!.getInstalledPluginList())
        #tabCtrl!.addTab("Installed Plugins", #installedTab!.getChildWindow())
        bbjapi().setCustomEventCallback(#UPDATE_PLUGIN_REQUEST!, #this!, "updatePluginRequest")
        bbjapi().setCustomEventCallback(#UNINSTALL_PLUGIN_REQUEST!, #this!, "uninstallPluginRequest")

        #remoteTab! = new RemotePluginTab(#window!, #tabCtrl!.getWidth(), #tabCtrl!.getHeight(), #sysGui!)
        #remoteTab!.updateTabEntries(#pluginManager!.getRemotePluginList(Boolean.FALSE))
        #tabCtrl!.addTab("Available Plugins", #remoteTab!.getChildWindow())
        bbjapi().setCustomEventCallback(#INSTALL_PLUGIN_REQUEST!, #this!, "installPluginRequest")
    methodend
    
    method public void updatePluginRequest(BBjCustomEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, event!.getObject())
        
        #pluginManager!.updatePlugin(installedPlugin!)
        #installedTab!.updateTabEntries(#pluginManager!.getInstalledPluginList())
    methodend
    
    method public void uninstallPluginRequest(BBjCustomEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, event!.getObject())
        
        rem TODO uninstall
        rem #installedTab!.updateTabEntries(#pluginManager!.getInstalledPluginList())
    methodend

    method public void installPluginRequest(BBjCustomEvent event!)
        declare HashMap map!
        map! = cast(HashMap, event!.getObject())

        declare RemoteBBjPlugin remotePlugin!
        declare Tag tag!

        declare Iterator it!
        it! = map!.entrySet().iterator()

        while(it!.hasNext())
            entry! = it!.next()

            remotePlugin! = cast(RemoteBBjPlugin, entry!.getKey())
            tag! = cast(Tag, entry!.getValue())

            #installPlugin(remotePlugin!, tag!)
        wend
    methodend

    method public void installPlugin(RemoteBBjPlugin remotePlugin!, Tag tag!)
        if(remotePlugin! = null() OR tag! = null()) then
            print "Error: null value"
            methodret
        endif

        if(#pluginManager!.hasDependencies(tag!)) then
            if(#pluginManager!.hasBBjDependency(tag!)) then
                if(!#pluginManager!.isBBjVersionValid(tag!)) then
                    a = msgbox("The installed BBj Version doesn't match the plugin's requirement."+ $0A$ +                   "The installed version is "+ str(REV) + $0A$ +                   "The plugin requires REV " + tag!.getBBjDependency() + " to run properly." + $0A$ +                   "Do want to install the plugin anyway ?", 4)

                    if(a <> 6) then
                        methodret
                    endif
                endif
            endif

            if(#pluginManager!.hasDependenciesToBBjPlugins(tag!)) then
                if(!#pluginManager!.areDependenciesInstalled(tag!)) then
                    rem TODO check if a dependency is installed but requires an update 

                    declare StringBuilder sb!
                    sb! = new StringBuilder("The selected plugin requires the following plugins to be installed in order to run properly: " + $0A$ + $0A$)

                    declare HashMap dependencyMap!
                    dependencyMap! = tag!.getPluginDependencyMap()

                    declare Iterator it!
                    it! = dependencyMap!.entrySet().iterator()

                    while(it!.hasNext())
                        entry! = it!.next()

                        sb!.append("Plugin: " + cast(RemoteBBjPlugin, entry!.getKey()).getName() + ",Tag: " + cast(Tag, entry!.getValue()).getName() + $0A$)
                    wend

                    sb!.append($0A$ + "Do you want to install these plugins as well?")
                    a = msgbox(sb!.toString(),4)

                    if(a <> 6 AND a <> 7) then
                        methodret
                    endif

                    if(a = 6) then
                        declare Tag dependencyTag!
                        declare RemoteBBjPlugin remotePlugin!

                        it! = dependencyMap!.entrySet().iterator()
                        while(it!.hasNext())
                            entry! = it!.next()

                            dependencyTag! = cast(Tag, entry!.getValue())
                            remotePlugin! = cast(RemoteBBjPlugin, entry!.getKey())

                            #installPlugin(remotePlugin!, cast(Tag, entry!.getValue()))
                        wend
                     endif
                endif
            endif
        endif

        #pbInstallation!.setText("Installing plugin: " + pluginName!)
        #pbInstallation!.setIndeterminate(1)
        #pbInstallation!.setVisible(1)

        #pluginManager!.installBBjPlugin(pluginName!, tagName!)
        #pbInstallation!.setIndeterminate(0)
        #pbInstallation!.setValue(100)
        #pbInstallation!.setText("Plugin Installed")

        wait 1

        #remoteTab!.updateTabEntries(#pluginManager!.getRemotePluginList(Boolean.TRUE))
    methodend

    method public void customizePluginProjectURLsMenuItemSelected(BBjMenuItemSelectEvent event!)
        #configurePluginProjectURLsWindow!.open(#sysGui!)
    methodend

    method public void resizeWindow(BBjResizeEvent event!)
REM         tab_width = #window!.getWidth() - 20
REM         tab_height = #window!.getHeight() - 60
REM 
REM         #tabCtrl!.setSize(tab_width, tab_height)
REM         rem #cwdAvailablePlugins!.setSize(tab_width, tab_height)
REM         #cwdInstalledPlugins!.setSize(tab_width, tab_height)
REM 
REM         rem #btnInstallPlugin!.setLocation(#cwdAvailablePlugins!.getWidth()-85, #cwdAvailablePlugins!.getHeight()-35)
REM 
REM         #btnUninstallPlugin!.setLocation(#cwdInstalledPlugins!.getWidth()-85, #cwdInstalledPlugins!.getHeight()-35)
REM         #btnUpdatePlugin!.setLocation(#cwdInstalledPlugins!.getWidth()-170, #cwdInstalledPlugins!.getHeight()-35)
    methodend

    method public static String getDisplayDate(java.util.Date date!)
        declare SimpleDateFormat sdf!

        sdf! = new SimpleDateFormat("dd MMM yyyy HH:mm", java.util.Locale.ENGLISH)
        rem sdf!.setTimeZone(java.util.TimeZone.getTimeZone("GMT"))

        methodret sdf!.format(date!)
    methodend

    method public void closeWindow(BBjCloseEvent event!)
        #window!.destroy()
        bye
    methodend

classend
print 'cs'

path! = BBjAPI().getFileSystem().resolvePath("PluginManagerLauncher.bbj", err=*next)

rem Adding the bbj/plugins folder to the session's prefix in case it hasn't been added yet
if(path! = null() OR path!.isEmpty()) then
    declare java.io.File currentDirectory!
    currentDirectory! = new java.io.File(dsk("") + dir(""))

    prefix """" + currentDirectory!.getParentFile().getAbsolutePath() + """ " + pfx
endif

declare PluginManagerUI pmui!
pmui! = new PluginManagerUI()

process_events