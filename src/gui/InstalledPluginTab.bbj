use java.util.HashMap
use java.util.Iterator
use java.util.ArrayList

use ::PluginManager/src/Tag.bbj::Tag
use ::PluginManager/PluginManagerUI.bbj::PluginManagerUI
use ::PluginManager/src/RemoteBBjPlugin.bbj::RemoteBBjPlugin
use ::PluginManager/src/InstalledBBjPlugin.bbj::InstalledBBjPlugin

class public InstalledPluginTab

    field private BBjSysGui sysGui!
    field private BBjChildWindow childWindow!

    field private ArrayList pluginList!

    field private BBjMenuButton mbRunDemo!
    field private BBjButton btnUpdatePlugin!
    field private BBjButton btnUninstallPlugin!
    field private BBjChildWindow cwdInstalledPlugins!
    field private BBjStandardGrid grdPlugins!

    field private BBjStaticText txtSelectedInstalledPluginName!
    field private BBjStaticText txtSelectedInstalledPluginStatus!
    field private BBjStaticText txtSelectedInstalledPluginProjectURL!
    field private BBjStaticText txtSelectedInstalledPluginDescription!
    field private BBjStaticText txtSelectedInstalledPluginVersionName!
    field private BBjStaticText txtSelectedInstalledPluginInstallDate!
    field private BBjStaticText txtSelectedInstalledPluginDependecies!
    field private BBjStaticText txtSelectedInstalledPluginBBjDependency!

    method public InstalledPluginTab(BBjTopLevelWindow window!, BBjNumber windowWidth, BBjNumber windowHeight, BBjSysGui sysGui!)
        #sysGui! = sysGui!
        #childWindow! = window!.addChildWindow(window!.getAvailableControlID(), 0, 0, windowWidth-10, windowHeight-25, sysGui!.getAvailableContext())
        #init(#childWindow!)
    methodend

    method private void init(BBjChildWindow childWindow!)
        space = 10
        cw_width = childWindow!.getWidth()
        cw_height = childWindow!.getHeight()

        row_x = 10
        row_y = 10
        control_width = 150
        control_height = 25
        rem displaying the control on the right side
        row_x = cw_width - control_width - space
        cw_next_id = childWindow!.getAvailableControlID()
        #mbRunDemo! = cast(BBjMenuButton, childWindow!.addMenuButton(cw_next_id, row_x, row_y, control_width, control_height, "Demo.bbj", $0001$))
        #mbRunDemo!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "demoProgramButtonPush")
        #mbRunDemo!.setBorderPainted(Boolean.TRUE)
        #mbRunDemo!.setEnabled(0)
        row_x = row_x + cntrol_width+ space
        row_y = row_y + control_height + space

        rem new row
        row_x = 10

        control_width = cw_width - 2*space
        control_height = 175
        cw_next_id = childWindow!.getAvailableControlID()
        #grdPlugins! = childWindow!.addGrid(cw_next_id, row_x, row_y, control_width, control_height, $8140$)
        row_y = row_y + control_height + space

        #grdPlugins!.setHasColumnHeader(1)
        #grdPlugins!.setSelectionMode(#grdPlugins!.GRID_SELECT_ROW)

        columnHeaderVector! = new BBjVector()
        columnHeaderVector!.add("Plugin ID")
        columnHeaderVector!.add("Plugin Name")
        columnHeaderVector!.add("Version")
        columnHeaderVector!.add("Installed Date")
        columnHeaderVector!.add("Plugin State")
        #grdPlugins!.setNumColumns(columnHeaderVector!.size())
        #grdPlugins!.setColumnHeaderText(columnHeaderVector!)
        #grdPlugins!.setColumnAlignment(1, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(2, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(3, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(4, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setRowHeight(20)
        #grdPlugins!.setFitToGrid(1)
        #grdPlugins!.setColumnWidth(0, 0)

        #grdPlugins!.setCallback(BBjAPI.ON_GRID_SELECT_ROW, #this!, "installedPluginGridRowSelected")

        column1_x = 10
        column2_x = ((cw_width -(2*10))/2) + 100

        rem new row
        row_x = column1_x

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Plugin Information")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))

        rem Column 2
        row_x = column2_x

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Installation Details")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))
        row_y = row_y + control_height + space

        space = 5

        rem new row
        row_x = column1_x

        control_width = 125
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Plugin Name: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginName! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        rem Column 2
        row_x = column2_x

        control_width = 100
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Status")
        row_x = row_x + control_width + space

        control_width = 90
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginStatus! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x

        control_width = 125
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Plugin Project URL: ")
        row_x = row_x + control_width + space

        control_width = 300
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginProjectURL! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")

        declare BBjFont defaultFont!
        defaultFont! = #txtSelectedInstalledPluginProjectURL!.getFont()
        #txtSelectedInstalledPluginProjectURL!.setForeColor(#sysGui!.makeColor(#sysGui!.BLUE))
        #txtSelectedInstalledPluginProjectURL!.setFont(#sysGui!.makeFont(defaultFont!.getName(), defaultFont!.getSize(), #sysGui!.UNDERLINE))

        cw_next_id = childWindow!.getAvailableControlID()
        btn! = childWindow!.addButton(cw_next_id, row_x-5, row_y-5, control_width, control_height, "")
        btn!.setOpaque(0)
        btn!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "pluginProjectURLButtonPush")

        rem new column
        row_x = column2_x

        control_width = 100
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Installed Version: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginVersionName! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x

        control_width = 125
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Plugin Description: ")
        row_x = row_x + control_width + space

        control_width = column2_x - 8*space - row_x
        control_height = 60
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginDescription! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        rem new column
        row_x = column2_x

        control_width = 100
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Install Date: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginInstallDate! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x
        row_y = row_y + space *4
        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Plugin Dependencies")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))
        row_y = row_y + control_height + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Revision Dependency: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginBBjDependency! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Plugin Dependencies: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginDependecies! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        rem The update plugin button

        control_width = 75
        control_height = 25
        row_x = cw_width - (2 * control_width) - (2 * space)
        row_y = cw_height - control_height - (2 * space)
        cw_next_id = childWindow!.getAvailableControlID()
        #btnUpdatePlugin! = cast(BBjButton, childWindow!.addButton(cw_next_id, row_x , row_y, control_width, control_height, "Update"))
        #btnUpdatePlugin!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "updatePlugin")
        #btnUpdatePlugin!.setEnabled(0)
        row_x = row_x + control_width + space

        rem The uninstall button
        control_width = 75
        control_height = 25
        cw_next_id = childWindow!.getAvailableControlID()
        #btnUninstallPlugin! = cast(BBjButton, childWindow!.addButton(cw_next_id, row_x, row_y, control_width, control_height, "Uninstall"))
        #btnUninstallPlugin!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "uninstallPlugin")
        #btnUninstallPlugin!.setEnabled(0)
    methodend

    method public void updateTabEntries(ArrayList pluginList!)
        declare BBjVector vect!
        vect! = new BBjVector()

        declare InstalledBBjPlugin installedPlugin!

        #pluginList! = pluginList!
        #grdPlugins!.clearMainGrid()
        #grdPlugins!.setNumRows(#pluginList!.size())
        if(!#pluginList!.isEmpty()) then
            for i=0 to #pluginList!.size()-1
                installedPlugin! = cast(InstalledBBjPlugin, #pluginList!.get(i))
                vect!.add(installedPlugin!.getID())
                vect!.add(installedPlugin!.getName())
                vect!.add(installedPlugin!.getTag().getName())
                vect!.add(PluginManagerUI.getDisplayDate(installedPlugin!.getInstallationDate()))
                if(installedPlugin!.isUpdateAvailable()) then
                    vect!.add("Update Available")
                else
                    vect!.add("Up to date")
                endif
            next i
            #grdPlugins!.setCellText(0, 0, vect!)
        endif
        #grdPlugins!.deselectAllCells()

        #grdPlugins!.setSelectedCell(0,0)
        #installedPluginGridRowSelected(null())
        #updateInstalledPluginInformation()
    methodend

    method public InstalledBBjPlugin getInstalledPlugin(BBjNumber id)
        if(#pluginList! = null() OR #pluginList!.isEmpty()) then
            methodret null()
        endif

        declare InstalledBBjPlugin installedPlugin!
        declare Iterator it!

        it! = #pluginList!.iterator()
        while(it!.hasNext())
            installedPlugin! = cast(InstalledBBjPlugin, it!.next())

            if(installedPlugin!.getID() = id) then
                methodret installedPlugin!
            endif
        wend

        methodret null()
    methodend

    method public InstalledBBjPlugin getSelectedPlugin()
        rem the plugin ID
        pluginID! = #grdPlugins!.getCellText(#grdPlugins!.getSelectedRow(), 0)

        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getInstalledPlugin(num(pluginID!)))

        methodret installedPlugin!
    methodend

    method public void pluginProjectURLButtonPush(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem display error 
            methodret
        endif

        bbjapi().getThinClient().browse(installedPlugin!.getProjectURL())
    methodend

    method public void updatePlugin(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            print "Error"
            methodret
        endif

        bbjapi().postCustomEvent(PluginManagerUI.getUPDATE_PLUGIN_REQUEST(), installedPlugin!)
    methodend

    method public void uninstallPlugin(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            print "Error"
            methodret
        endif

        bbjapi().postCustomEvent(PluginManagerUI.getUNINSTALL_PLUGIN_REQUEST(), installedPlugin!)
    methodend

    method private void updateInstalledPluginInformation()
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem TODO reset the values
            methodret
        endif

        rem updating the plugin name
        #txtSelectedInstalledPluginName!.setText(installedPlugin!.getName())

        #txtSelectedInstalledPluginProjectURL!.setText(str(installedPlugin!.getProjectURL()))

        rem updatig the plugin status
        if(installedPlugin!.isUpdateAvailable()) then
            #txtSelectedInstalledPluginStatus!.setText("Update Available")
            #txtSelectedInstalledPluginStatus!.setBackColor(#sysGui!.makeColor(#sysGui!.YELLOW))
        else
            #txtSelectedInstalledPluginStatus!.setText("Up to date")
            #txtSelectedInstalledPluginStatus!.setBackColor(#sysGui!.makeColor(#sysGui!.GREEN))
        endif

        #txtSelectedInstalledPluginDescription!.setText(installedPlugin!.getDescription())
        #txtSelectedInstalledPluginVersionName!.setText(installedPlugin!.getTag().getName())
        #txtSelectedInstalledPluginInstallDate!.setText(PluginManagerUI.getDisplayDate(installedPlugin!.getInstallationDate()))
        #txtSelectedInstalledPluginBBjDependency!.setText(installedPlugin!.getTag().getBBjDependency())

        declare StringBuilder sb!
        sb! = new StringBuilder()

        declare HashMap dependencyMap!
        dependencyMap! = installedPlugin!.getTag().getPluginDependencyMap()

        declare Iterator it!
        it! = dependencyMap!.entrySet().iterator()
        while(it!.hasNext())
            entry! = it!.next()
            sb!.append(cast(RemoteBBjPlugin, entry!.getKey()).getName())
            sb!.append(", ")
        wend

        if(sb!.length() > 0) then
            rem deleting the last two characters : ", "
            sb!.delete(sb!.length()-2, sb!.length())
        endif

        #txtSelectedInstalledPluginDependecies!.setText(sb!.toString())
    methodend

    method public void installedPluginGridRowSelected(BBjGridSelectRowEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem TODO reset the values
            methodret
        endif

        rem Enabling / disabling the update button depending on the selected plugin
        if(installedPlugin!.isUpdateAvailable()) then
            #btnUpdatePlugin!.setEnabled(1)
        else
            #btnUpdatePlugin!.setEnabled(0)
        endif

        #updateDemoButtonState(installedPlugin!)

        #updateInstalledPluginInformation()

        rem Enabling the uninstall button
        #btnUninstallPlugin!.setEnabled(1)
    methodend

    method private void updateDemoButtonState(InstalledBBjPlugin installedPlugin!)
        rem Enabling the Run demo button if the plugin has a demo program
        if(installedPlugin!.hasDemo()) then
            declare ArrayList demoProgramNameList!
            demoProgramNameList! = installedPlugin!.getDemoProgramNames()

            if(demoProgramNameList!.size() = 1) then
                #mbRunDemo!.removeDropdownMenu()
                #mbRunDemo!.setText(str(demoProgramNameList!.get(0)))
            else
                declare Iterator it!
                it! = demoProgramNameList!.iterator()

                rem Always preselect the Demo.bbj program if present
                if(demoProgramNameList!.contains("Demo.bbj")) then
                    excludeName! = "Demo.bbj"
                else
                    excludeName! = str(demoProgramNameList!.get(0))
                endif

                #mbRunDemo!.setText(excludeName!)

                declare BBjPopupMenu popupMenu!
                popupMenu! = #sysGui!.addPopupMenu()

                declare BBjMenuItem menuItem!

                id = 1
                while(it!.hasNext())
                    demoProgramName! = cast(String, it!.next())

                    if(demoProgramName! = excludeName!) then
                        continue
                    endif

                    menuItem! = cast(BBjMenuItem, popupMenu!.addMenuItem(0-id, demoProgramName!))
                    menuItem!.setCallback(BBjAPI.ON_POPUP_ITEM_SELECT, #this!, "demoProgramMenuItemSelected")
                    id = id + 1
                wend

                #mbRunDemo!.setDropdownMenu(popupMenu!)
            endif

            #mbRunDemo!.setEnabled(1)
        else
            #mbRunDemo!.setText("Demo.bbj")
            #mbRunDemo!.removeDropdownMenu()
            #mbRunDemo!.setEnabled(0)
        endif
    methodend

    method public void demoProgramMenuItemSelected(BBjPopupSelectEvent event!)
        declare BBjMenuItem menuItem!
        menuItem! = cast(BBjMenuItem, event!.getMenuItem())

        #runDemoProgram(menuItem!.getText())
    methodend

    method public void demoProgramButtonPush(BBjButtonPushEvent event!)
        declare BBjMenuButton menuButton!
        menuButton! = cast(BBjMenuButton, event!.getControl())

        #runDemoProgram(menuButton!.getText())
    methodend

    method public void runDemoProgram(String demoProgramName!)
        declare InstalledBBjPlugin installledPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            print "error"
            methodret
        endif

        declare HashMap map!
        map! = new HashMap()
        map!.put(installedPlugin!, demoProgramName!)

        bbjapi().postCustomEvent(PluginManagerUI.getRUN_DEMO_PROGRAM(), map!)
    methodend

    rem /**
    rem  * Returns the BBjChildWindow object created by this class.
    rem  * 
    rem  * @return the BBjChildWindow object.
    rem  */
    method public BBjChildWindow getChildWindow()
        methodret #childWindow!
    methodend

classend