use java.util.HashMap
use java.util.Iterator
use java.util.ArrayList

use ::PluginManager/src/Tag.bbj::Tag
use ::PluginManager/PluginManagerUI.bbj::PluginManagerUI
use ::PluginManager/src/RemoteBBjPlugin.bbj::RemoteBBjPlugin
use ::PluginManager/src/InstalledBBjPlugin.bbj::InstalledBBjPlugin

class public InstalledPluginTab

    field private BBjSysGui sysGui!
    field private BBjChildWindow childWindow!

    field private ArrayList pluginList!

    field private BBjMenuButton mbRunDemo!
    field private BBjButton btnRunConfiguration!

    field private BBjButton btnUpdatePlugin!
    field private BBjButton btnUninstallPlugin!
    field private BBjChildWindow cwdInstalledPlugins!
    field private BBjStandardGrid grdPlugins!

    field private BBjNumber btnWidth  = 150
    field private BBjNumber ctrlSpace = 10
    
    field private BBjMenuButton btnPluginProjectURL!
    field private BBjMenuButton btnPluginDocumentationURL!

    field private BBjProgressBar pbPluginUpdate!

    field private BBjStaticText txtSelectedInstalledPluginName!
    field private BBjStaticText txtSelectedInstalledPluginStatus!
    field private BBjStaticText txtSelectedInstalledPluginDescription!
    field private BBjStaticText txtSelectedInstalledPluginVersionName!
    field private BBjStaticText txtSelectedInstalledPluginInstallDate!
    field private BBjStaticText txtSelectedInstalledPluginDependecies!
    field private BBjStaticText txtSelectedInstalledPluginBBjDependency!

    method public InstalledPluginTab(BBjTopLevelWindow window!, BBjNumber windowWidth, BBjNumber windowHeight, BBjSysGui sysGui!)
        #sysGui! = sysGui!
        #childWindow! = window!.addChildWindow(window!.getAvailableControlID(), 0, 0, windowWidth-10, windowHeight-25, sysGui!.getAvailableContext())
        #init(#childWindow!)
    methodend

    method private void init(BBjChildWindow childWindow!)
        #sysGui!.setRepaintEnabled(0)
        space = #ctrlSpace
        cw_width = childWindow!.getWidth()
        cw_height = childWindow!.getHeight()

        row_x = 10
        row_y = 10

        control_width = #btnWidth
        control_height = 25

        rem displaying the control on the right side
        row_x = cw_width - control_width - space -10
        cw_next_id = childWindow!.getAvailableControlID()
        rem disabled + invisible
        #mbRunDemo! = cast(BBjMenuButton, childWindow!.addMenuButton(cw_next_id, row_x, row_y, control_width, control_height, "Demo.bbj", $0011$))
        #mbRunDemo!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "demoProgramButtonPush")
        #mbRunDemo!.setBorderPainted(Boolean.TRUE)
        #mbRunDemo!.setEnabled(0)

        control_width = #btnWidth
        control_height = 25
        row_x = row_x - control_width - space
        cw_next_id = childWindow!.getAvailableControlID()
        rem disabled + Invisible
        #btnRunConfiguration! = cast(BBjButton, childWindow!.addButton(cw_next_id, row_x, row_y, control_width, control_height, "Configure", $0011$))
        #btnRunConfiguration!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "runConfigurationButtonPush")
        #btnRunConfiguration!.setToolTipText("Runs the Plugin's Configuration program (cfg/configure.bbj)")

        control_width = 200
        control_height = 25
        row_x = row_x - control_width - space -10         
        cw_next_id = childWindow!.getAvailableControlID()
        #pbPluginUpdate! = childWindow!.addProgressBar(cw_next_id, row_x, row_y, control_width, control_height)
        #pbPluginUpdate!.setVisible(0)

        rem row_x = row_x + cntrol_width+ space
        row_y = row_y + control_height + space

        rem new row
        row_x = 10

        control_width = cw_width - 2 * space -10
        control_height = 175
        cw_next_id = childWindow!.getAvailableControlID()
        #grdPlugins! = childWindow!.addGrid(cw_next_id, row_x, row_y, control_width, control_height, $8140$)
        row_y = row_y + control_height + space

        #grdPlugins!.setHasColumnHeader(1)
        #grdPlugins!.setSelectionMode(#grdPlugins!.GRID_SELECT_ROW)

        columnHeaderVector! = new BBjVector()
        columnHeaderVector!.add("Plugin ID")
        columnHeaderVector!.add("Plugin Name")
        columnHeaderVector!.add("Version")
        columnHeaderVector!.add("Installed Date")
        columnHeaderVector!.add("Plugin State")
        #grdPlugins!.setNumColumns(columnHeaderVector!.size())
        #grdPlugins!.setColumnHeaderText(columnHeaderVector!)
        #grdPlugins!.setColumnAlignment(1, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(2, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(3, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setColumnAlignment(4, #grdPlugins!.GRID_ALIGN_LEFT)
        #grdPlugins!.setRowHeight(20)
        #grdPlugins!.setFitToGrid(1)
        #grdPlugins!.setColumnWidth(0, 0)
        #grdPlugins!.setColumnUserSortable(1, Boolean.TRUE)
        #grdPlugins!.setColumnUserSortable(3, Boolean.TRUE)
        #grdPlugins!.setColumnUserSortable(4, Boolean.TRUE)

        #grdPlugins!.setCallback(BBjAPI.ON_GRID_SELECT_ROW, #this!, "installedPluginGridRowSelected")
        #grdPlugins!.setCallback(BBjAPI.ON_GRID_MOUSE_UP, #this!, "installedPluginGridMouseUp")

        column1_x = 10
        column2_x = ((cw_width -(2*10))/2) + 100

        rem new row
        row_x = column1_x

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Plugin Information")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))

        rem Column 2
        row_x = column2_x

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Installation Details")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))
        row_y = row_y + control_height + space

        space = 5

        rem new row
        row_x = column1_x

        control_width = 135
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Name: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginName! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        rem Column 2
        row_x = column2_x

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Status")
        row_x = row_x + control_width + space

        control_width = 120
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginStatus! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x
        
        declare BBjFont defaultFont!
        defaultFont! = #txtSelectedInstalledPluginStatus!.getFont()

        control_width = 135
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Project URL: ")
        row_x = row_x + control_width + space

        control_width = column2_x - 8*space - row_x
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #btnPluginProjectURL! = childWindow!.addMenuButton(cw_next_id, row_x, row_y-5, control_width, control_height, "")
        #btnPluginProjectURL!.setForeColor(#sysGui!.makeColor(#sysGui!.BLUE))
        #btnPluginProjectURL!.setFont(#sysGui!.makeFont(defaultFont!.getName(), defaultFont!.getSize(), #sysGui!.UNDERLINE))
        #btnPluginProjectURL!.setOpaque(0)
        #btnPluginProjectURL!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "pluginProjectURLButtonPush")
        #btnPluginProjectURL!.setBorderPainted(0)
        #btnPluginProjectURL!.setAlignment(#sysGui!.ALIGN_LEFT)

        rem new column
        row_x = column2_x

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Installed Version: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginVersionName! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x
        
        control_width = 135
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Documentation URL: ")
        row_x = row_x + control_width + space

        control_width = column2_x - 8*space - row_x
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #btnPluginDocumentationURL! = childWindow!.addMenuButton(cw_next_id, row_x, row_y-5, control_width, control_height, "")
        #btnPluginDocumentationURL!.setForeColor(#sysGui!.makeColor(#sysGui!.BLUE))
        #btnPluginDocumentationURL!.setFont(#sysGui!.makeFont(defaultFont!.getName(), defaultFont!.getSize(), #sysGui!.UNDERLINE))
        #btnPluginDocumentationURL!.setOpaque(0)
        #btnPluginDocumentationURL!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "pluginDocumentationURLButtonPush")
        #btnPluginDocumentationURL!.setBorderPainted(0)
        #btnPluginDocumentationURL!.setAlignment(#sysGui!.ALIGN_LEFT)

        rem new column
        row_x = column2_x

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Install Date: ")
        row_x = row_x + control_width + space

        control_width = 150
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginInstallDate! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space
        row_y = row_y + control_height + space
        
        rem new row
        row_x = column1_x

        control_width = 135
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Description: ")
        row_x = row_x + control_width + space
        
        control_width = column2_x - 8*space - row_x
        control_height = 60
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginDescription! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        row_x = row_x + control_width + space
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x
        row_y = row_y + space
        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        txt! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Plugin Dependencies")
        txt!.setFont(#sysGui!.makeFont(txt!.getFont().getName(), 10, #sysGui!.BOLD + #sysGui!.UNDERLINE))
        row_y = row_y + control_height + space

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "BBj Revision Dependency: ")
        row_x = row_x + control_width + space

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginBBjDependency! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_y = row_y + control_height + space

        rem new row
        row_x = column1_x

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "Plugin Dependencies: ")
        row_x = row_x + control_width + space

        control_width = 200
        control_height = 20
        cw_next_id = childWindow!.getAvailableControlID()
        #txtSelectedInstalledPluginDependecies! = childWindow!.addStaticText(cw_next_id, row_x, row_y, control_width, control_height, "")
        row_x = row_x + control_width + space

        rem The update plugin button

        control_width = 75
        control_height = 25
        row_x = cw_width - (2 * control_width) - (4 * space) - 10 
        row_y = cw_height - control_height - (4 * space)
        cw_next_id = childWindow!.getAvailableControlID()
        #btnUpdatePlugin! = cast(BBjButton, childWindow!.addButton(cw_next_id, row_x , row_y, control_width, control_height, "Update"))
        #btnUpdatePlugin!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "updatePlugin")
        #btnUpdatePlugin!.setEnabled(0)
        row_x = row_x + control_width + space

        rem The uninstall button
        control_width = 75
        control_height = 25
        cw_next_id = childWindow!.getAvailableControlID()
        #btnUninstallPlugin! = cast(BBjButton, childWindow!.addButton(cw_next_id, row_x, row_y, control_width, control_height, "Uninstall"))
        #btnUninstallPlugin!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "uninstallPlugin")
        #btnUninstallPlugin!.setEnabled(0)

        bbjapi().setCustomEventCallback(PluginManagerUI.getUPDATE_PLUGIN_END(), #this!, "updatePluginEnd")
        
        #sysGui!.setRepaintEnabled(1)
    methodend

    rem /**
    rem  * The callback for the hidden button used to open the plugin's documentation page
    rem  * when the user thinks that he clicked on the documentation URL.
    rem  * 
    rem  * @param event! The event issued when the user clicks on the hidden button. 
    rem  */
    method public void pluginDocumentationURLButtonPush(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem display error 
            methodret
        endif

        if(installedPlugin!.getTag().getDocumentationURL() <> null() AND !installedPlugin!.getTag().getDocumentationURL().isEmpty()) then
            bbjapi().getThinClient().browse(installedPlugin!.getTag().getDocumentationURL())
        endif
    methodend

    rem /**
    rem  * The callback for the "Run Configuration Program" button. 
    rem  * 
    rem  * @param event! The event issued when the user clicks the button.
    rem  */
    method public void runConfigurationButtonPush(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem Nothing is selected, do nothing
            methodret
        endif

        bbjapi().postCustomEvent(PluginManagerUI.getRUN_CONFIGURATION_PROGRAM(), installedPlugin!)
    methodend
    
    method public void createRelatedData()
        declare ArrayList dateArrayList!
        declare ArrayList cellTextArrayList!
        declare InstalledBBjPlugin installedPlugin!

        dateArrayList! = new ArrayList()
        cellTextArrayList! = new ArrayList()
        
        for i=0 to #pluginList!.size() - 1

            installedPlugin! = cast(InstalledBBjPlugin, #pluginList!.get(i))
            
            dateMillis! = cast(java.util.Date, installedPlugin!.getInstallationDate())
            dateArrayList!.add(dateMillis!)
        next i
        
        for i=0 to #grdPlugins!.getNumRows() - 1
            text! = #grdPlugins!.getCellText(i, 3)
            cellTextArrayList!.add(text!)
        next i

        declare Integer[] dateArray!
        dateArray! = new Integer[dateArrayList!.size()]
        dateArray![] = dateArrayList!.toArray()
        
        declare String[] cellTextArray!
        cellTextArray! = new String[cellTextArrayList!.size()]
        cellTextArray![] = cellTextArrayList!.toArray()
        
        for i=0 to #grdPlugins!.getNumRows()-1
            #grdPlugins!.setCellData(i,3,str(cellTextArray![i]),str(dateArray![i]))
            #grdPlugins!.setCellText(i,3,str(cellTextArray![i]))
        next i
        #grdPlugins!.resort()
    methodend
    
    method private void setDateColumsSortable()
        for i=0 to #grdPlugins!.getNumRows()-1
            #grdPlugins!.setColumnSortedByRelatedData(3,i)
        next i
    methodend
    
    method public void updateTabEntries(ArrayList pluginList!)
        declare BBjVector vect!
        vect! = new BBjVector()

        declare InstalledBBjPlugin installedPlugin!

        #pluginList! = pluginList!
        #grdPlugins!.clearMainGrid()
        #grdPlugins!.setNumRows(#pluginList!.size())
        if(!#pluginList!.isEmpty()) then
            for i=0 to #pluginList!.size()-1
                installedPlugin! = cast(InstalledBBjPlugin, #pluginList!.get(i))
                vect!.add(installedPlugin!.getID())
                vect!.add(installedPlugin!.getName())
                vect!.add(installedPlugin!.getTag().getName())
                vect!.add(PluginManagerUI.getDisplayDate(installedPlugin!.getInstallationDate()))
                if(installedPlugin!.isUpdateAvailable()) then
                    vect!.add("Update Available")
                else
                    vect!.add("Up to date")
                endif
            next i
            #grdPlugins!.setCellText(0, 0, vect!)
            #createRelatedData()
            #setDateColumsSortable()
        endif
        #grdPlugins!.deselectAllCells()

        #grdPlugins!.setSelectedCell(0,0)
        #installedPluginGridRowSelected(null())
    methodend

    method public InstalledBBjPlugin getInstalledPlugin(BBjNumber id)
        if(#pluginList! = null() OR #pluginList!.isEmpty()) then
            methodret null()
        endif

        declare InstalledBBjPlugin installedPlugin!
        declare Iterator it!

        it! = #pluginList!.iterator()
        while(it!.hasNext())
            installedPlugin! = cast(InstalledBBjPlugin, it!.next())

            if(installedPlugin!.getID() = id) then
                methodret installedPlugin!
            endif
        wend

        methodret null()
    methodend

    rem /**
    rem  * Returns the currently selected plugin object or null
    rem  * if no line is selected.
    rem  * 
    rem  * @return returns the selected plugin or null.
    rem  */
    method public InstalledBBjPlugin getSelectedPlugin()
        selectedRow = #grdPlugins!.getSelectedRow()
        
        if selectedRow = -1 then
            methodret null()
        endif
        
        rem the plugin ID
        pluginID! = #grdPlugins!.getCellText(selectedRow, 0)

        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getInstalledPlugin(num(pluginID!)))

        methodret installedPlugin!
    methodend

    method public void pluginProjectURLButtonPush(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem display error 
            methodret
        endif

        bbjapi().getThinClient().browse(installedPlugin!.getProjectURL())
    methodend

    method public void updatePlugin(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            print "Error"
            methodret
        endif
        
        rem relocating the progress bar
        if #btnRunConfiguration!.isVisible() AND #mbRunDemo!.isVisible() then
            rem no button
        else
            if !#btnRunConfiguration!.isVisible() AND !#mbRunDemo!.isVisible() then
                rem completely to the rigth
            else
                rem one button
            endif
        endif

        #pbPluginUpdate!.setText("Updating Plugin")
        #pbPluginUpdate!.setIndeterminate(1)
        #pbPluginUpdate!.setVisible(1)

        bbjapi().postCustomEvent(PluginManagerUI.getUPDATE_PLUGIN_REQUEST(), installedPlugin!)
    methodend

    method public void updatePluginEnd(BBjCustomEvent event!)
        #pbPluginUpdate!.setIndeterminate(0)
        #pbPluginUpdate!.setValue(100)
        #pbPluginUpdate!.setText("Plugin Updated")
        wait 1
        #pbPluginUpdate!.setVisible(0)
    methodend

    method public void uninstallPlugin(BBjButtonPushEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        rem no plugin selected - do nothing
        if(installedPlugin! = null()) then
            methodret
        endif

        bbjapi().postCustomEvent(PluginManagerUI.getUNINSTALL_PLUGIN_REQUEST(), installedPlugin!)
    methodend
    
    rem /**
    rem  * Resets the plugin informations.
    rem  */
    method private void resetPluginInformation()
        #txtSelectedInstalledPluginName!.setText("")
        #btnPluginProjectURL!.setText("")
        #txtSelectedInstalledPluginStatus!.setText("")
        #txtSelectedInstalledPluginStatus!.setBackColor(#txtSelectedInstalledPluginName!.getBackColor())
        #txtSelectedInstalledPluginDescription!.setText("")
        #txtSelectedInstalledPluginVersionName!.setText("")
        #txtSelectedInstalledPluginInstallDate!.setText("")
        #txtSelectedInstalledPluginBBjDependency!.setText("")
        #btnPluginDocumentationURL!.setText("")
        #txtSelectedInstalledPluginDependecies!.setText("")
    methodend

    method private void updateInstalledPluginInformation()
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())
        
        rem no plugin selected - Reset the values
        if(installedPlugin! = null()) then
            #resetPluginInformation()
            methodret
        endif

        rem updating the plugin name
        #txtSelectedInstalledPluginName!.setText(installedPlugin!.getName())

        #btnPluginProjectURL!.setText(str(installedPlugin!.getProjectURL()))

        rem updatig the plugin status
        if(installedPlugin!.isUpdateAvailable()) then
            #txtSelectedInstalledPluginStatus!.setText("Update Available")
            #txtSelectedInstalledPluginStatus!.setBackColor(#sysGui!.makeColor(#sysGui!.YELLOW))
        else
            #txtSelectedInstalledPluginStatus!.setText("Up to date")
            #txtSelectedInstalledPluginStatus!.setBackColor(#sysGui!.makeColor(#sysGui!.GREEN))
        endif

        #txtSelectedInstalledPluginDescription!.setText(installedPlugin!.getDescription())
        #txtSelectedInstalledPluginVersionName!.setText(installedPlugin!.getTag().getName())
        #txtSelectedInstalledPluginInstallDate!.setText(PluginManagerUI.getDisplayDate(installedPlugin!.getInstallationDate()))
        #txtSelectedInstalledPluginBBjDependency!.setText(installedPlugin!.getTag().getBBjDependency())

        if(installedPlugin!.getTag().getDocumentationURL() <> null()) then
            #btnPluginDocumentationURL!.setText(installedPlugin!.getTag().getDocumentationURL())
        else
            #btnPluginDocumentationURL!.setText("")
        endif

        declare StringBuilder sb!
        sb! = new StringBuilder()

        declare HashMap dependencyMap!
        dependencyMap! = installedPlugin!.getTag().getPluginDependencyMap()

        declare Iterator it!
        it! = dependencyMap!.entrySet().iterator()
        while(it!.hasNext())
            entry! = it!.next()
            sb!.append(cast(RemoteBBjPlugin, entry!.getKey()).getName())
            sb!.append(", ")
        wend

        if(sb!.length() > 0) then
            rem deleting the last two characters : ", "
            sb!.delete(sb!.length()-2, sb!.length())
        endif

        #txtSelectedInstalledPluginDependecies!.setText(sb!.toString())
    methodend

    method public void installedPluginGridRowSelected(BBjGridSelectRowEvent event!)
        declare InstalledBBjPlugin installedPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())
        
        #sysGui!.setRepaintEnabled(Boolean.FALSE)

        if(installedPlugin! = null()) then
            #updateDemoButtonState(null())
            #updateConfigureButtonState(null())
            #updateInstalledPluginInformation()

            #btnUninstallPlugin!.setEnabled(0)
            
            #sysGui!.setRepaintEnabled(Boolean.TRUE)
            methodret
        endif

        rem Enabling / disabling the update button depending on the selected plugin
        if(installedPlugin!.isUpdateAvailable()) then
            #btnUpdatePlugin!.setEnabled(1)
        else
            #btnUpdatePlugin!.setEnabled(0)
        endif

        #updateDemoButtonState(installedPlugin!)
        #updateConfigureButtonState(installedPlugin!)

        rem display / hide the buttons and reorder them
        if(#mbRunDemo!.isEnabled()) then
            #mbRunDemo!.setVisible(Boolean.TRUE)
            if(#btnRunConfiguration!.isEnabled()) then
                #btnRunConfiguration!.setLocation(#mbRunDemo!.getX()-#ctrlSpace-#btnWidth, #mbRunDemo!.getY())
                #btnRunConfiguration!.setVisible(Boolean.TRUE)

                rem Re-position the progressbar
                #pbPluginUpdate!.setLocation(#btnRunConfiguration!.getX()-#ctrlSpace-200, #btnRunConfiguration!.getY())
            else
                #btnRunConfiguration!.setVisible(Boolean.FALSE)

                rem Re-position the progressbar
                #pbPluginUpdate!.setLocation(#mbRunDemo!.getX()-#ctrlSpace-200, #mbRunDemo!.getY())
            endif
        else
            #mbRunDemo!.setVisible(Boolean.FALSE)
            if(#btnRunConfiguration!.isEnabled()) then
                #btnRunConfiguration!.setLocation(#mbRunDemo!.getX(), #mbRunDemo!.getY())
                #btnRunConfiguration!.setVisible(Boolean.TRUE)

                #pbPluginUpdate!.setLocation(#btnRunConfiguration!.getX()-#ctrlSpace-200, #btnRunConfiguration!.getY())
            else
                #btnRunConfiguration!.setVisible(Boolean.FALSE)

                #pbPluginUpdate!.setLocation(#mbRunDemo!.getX() + #btnWidth - #ctrlSpace-200, #btnRunConfiguration!.getY())
            endif
        endif

        #updateInstalledPluginInformation()

        if installedPlugin!.isMutable() then
            rem Enabling the uninstall button
            #btnUninstallPlugin!.setEnabled(1)
        else
            #btnUninstallPlugin!.setEnabled(0)
        endif
        
        #sysGui!.setRepaintEnabled(Boolean.TRUE)
    methodend

    rem /**
    rem  * Uses the information of the given installed bbj plugin to enable or disable
    rem  * the "Run Configuration Program" button. If the gievn installed plugin has a configuration
    rem  * program located in its home/cfg/ folder the button will be enabled, otherwise it will be disabled.
    rem  * 
    rem  * @param installedPlugin! The installed plugin used to determine the state of the button.
    rem  */
    method public void updateConfigureButtonState(InstalledBBjPlugin installedPlugin!)
        rem no plugin passed, disable the button
        if(installedPlugin! = null()) then
            #btnRunConfiguration!.setEnabled(Boolean.FALSE)
            #btnRunConfiguration!.setVisible(Boolean.FALSE)
            methodret
        endif

        #btnRunConfiguration!.setEnabled(installedPlugin!.hasConfigurationProgram())
        #btnRunConfiguration!.setVisible(installedPlugin!.hasConfigurationProgram())
    methodend

    rem /**
    rem  * Changes the state of the "Run Demo" button based on the values of the given
    rem  * installed plugin object. If the given object has multiple demo programs the "Run Demo" button
    rem  * will have a dropdown with all these programs. If it has a single demo program the button won't have 
    rem  * a drop down. If the plugin has no demos, the button will be disabled.
    rem  * 
    rem  * @param installedPlugin! The plugin used to change the state of the "Run Demo" button.
    rem  */
    method private void updateDemoButtonState(InstalledBBjPlugin installedPlugin!)
        rem No plugin passed, reset the button's values and disable it
        if(installedPlugin! = null() OR !installedPlugin!.hasDemo()) then
            #mbRunDemo!.setText("Demo.bbj")
            #mbRunDemo!.removeDropdownMenu()
            #mbRunDemo!.setEnabled(0)
            #mbRunDemo!.setVisible(Boolean.FALSE)
            methodret
        endif
        
        declare ArrayList demoProgramNameList!
        demoProgramNameList! = installedPlugin!.getDemoProgramNames()

        if(demoProgramNameList!.size() = 1) then
            #mbRunDemo!.removeDropdownMenu()
            #mbRunDemo!.setText(str(demoProgramNameList!.get(0)))
        else
            declare Iterator it!
            it! = demoProgramNameList!.iterator()

            rem Always preselect the Demo.bbj program if present
            if(demoProgramNameList!.contains("Demo.bbj")) then
                excludeName! = "Demo.bbj"
            else
                excludeName! = str(demoProgramNameList!.get(0))
            endif

            #mbRunDemo!.setText(excludeName!)

            declare BBjPopupMenu popupMenu!
            popupMenu! = #sysGui!.addPopupMenu()

            declare BBjMenuItem menuItem!

            id = 1
            while(it!.hasNext())
                demoProgramName! = cast(String, it!.next())

                if(demoProgramName! = excludeName!) then
                    continue
                endif

                menuItem! = cast(BBjMenuItem, popupMenu!.addMenuItem(0-id, demoProgramName!))
                menuItem!.setCallback(BBjAPI.ON_POPUP_ITEM_SELECT, #this!, "demoProgramMenuItemSelected")
                id = id + 1
            wend

            #mbRunDemo!.setDropdownMenu(popupMenu!)
        endif

        #mbRunDemo!.setEnabled(1)
        #mbRunDemo!.setVisible(Boolean.TRUE)
    methodend
    
    method public void installedPluginGridMouseUp(BBjGridMouseUpEvent event!)
        #updateInstalledPluginInformation()
        
        declare InstalledBBjPlugin plugin!
        plugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())
        
        #updateDemoButtonState(plugin!)
        #updateConfigureButtonState(plugin!)
    methodend

    method public void demoProgramMenuItemSelected(BBjPopupSelectEvent event!)
        declare BBjMenuItem menuItem!
        menuItem! = cast(BBjMenuItem, event!.getMenuItem())

        #runDemoProgram(menuItem!.getText())
    methodend

    method public void demoProgramButtonPush(BBjButtonPushEvent event!)
        declare BBjMenuButton menuButton!
        menuButton! = cast(BBjMenuButton, event!.getControl())

        #runDemoProgram(menuButton!.getText())
    methodend

    method public void runDemoProgram(String demoProgramName!)
        declare InstalledBBjPlugin installledPlugin!
        installedPlugin! = cast(InstalledBBjPlugin, #getSelectedPlugin())

        if(installedPlugin! = null()) then
            rem Nothing is selected do nothing
            methodret
        endif

        declare HashMap map!
        map! = new HashMap()
        map!.put(installedPlugin!, demoProgramName!)

        bbjapi().postCustomEvent(PluginManagerUI.getRUN_DEMO_PROGRAM(), map!)
    methodend

    rem /**
    rem  * Returns the BBjChildWindow object created by this class.
    rem  * 
    rem  * @return the BBjChildWindow object.
    rem  */
    method public BBjChildWindow getChildWindow()
        methodret #childWindow!
    methodend

classend