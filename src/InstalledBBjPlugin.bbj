use ::PluginManager/src/Tag.bbj::Tag
use ::PluginManager/src/BBjPlugin.bbj::BBjPlugin

use java.io.File

use java.util.ArrayList

class public InstalledBBjPlugin extends BBjPlugin

    field private String displayName!

    rem the date of the plugin installation 
    field private java.util.Date installationDate!
    
    rem the github project URL
    field private String projectURL!
    
    rem the name of the installed version tag
    field private Tag tag!
    
    rem the date off the last known remote repository change
    field private java.util.Date lastChanged!
    
    rem the flag to determine if an update is available or not 
    field private boolean updateAvailable!

    rem The boolean value indicating whether this plugin has a Demo program or not
    field private boolean hasDemo!
    
    rem the field indicating whether the plugin has at least one configuration program
    field private boolean hasConfigurationProgram!
    
    rem the installation directory of the plugin
    field private File installationDirectory!

    rem Indicates whether the plugin is mutable or not 
    rem Usually the pre-installed plug-ins are immutable and considered 
    rem part of the BBj product and can therefore not be uninstalled
    field private boolean mutable!
    
    field private ArrayList demoProgramNameList!

    method public InstalledBBjPlugin()
        #updateAvailable! = Boolean.FALSE
        #hasDemo! = Boolean.FALSE
        #hasConfigurationProgram! = Boolean.FALSE
        #mutable! = Boolean.TRUE
    methodend
    
    method public void setProjectURL(String projectURL!)
        #projectURL! = projectURL!
    methodend
    
    method public String getProjectURL()
        methodret #projectURL!
    methodend
    
    method public void setDemoProgramNames(ArrayList programNames!)
        #demoProgramNameList! = programNames!
    methodend
    
    method public ArrayList getDemoProgramNames()
        methodret #demoProgramNameList!
    methodend
    
    method public void setInstallationDirectory(File directory!)
        #installationDirectory! = directory!
    methodend
    
    method public File getInstallationDirectory()
        methodret #installationDirectory!
    methodend

    method public void setMutable(Boolean mutable!)
        #mutable! = mutable!
    methodend

    method public Boolean isMutable()
        methodret #mutable!
    methodend
    
    method public void setHasDemo(Boolean hasDemo!)
        #hasDemo! = hasDemo!
    methodend
    
    method public Boolean hasDemo()
        methodret #hasDemo!
    methodend
    
    method public void setUpdateAvailable(Boolean updateAvailable!)
        #updateAvailable! = updateAvailable!
    methodend
    
    method public Boolean isUpdateAvailable()
        methodret #updateAvailable!
    methodend
    
    method public void setLastChangedDate(java.util.Date lastChanged!)
        #lastChanged! = lastChanged!
    methodend
    
    method public java.util.Date getLastChangedDate()
        methodret #lastChanged!
    methodend
    
    method public void setInstallationDate(java.util.Date installationDate!)
        #installationDate! = installationDate!
    methodend
    
    method public java.util.Date getInstallationDate()
        methodret #installationDate!
    methodend
    
    rem /**
    rem  * Sets the given Tag as this plugin's Tag.
    rem  * 
    rem  * @param tag! The Tag to set.
    rem  */
    method public void setTag(Tag tag!)
        #tag! = tag!
    methodend
    
    rem /**
    rem  * Returns the Tag of this plugin.
    rem  * 
    rem  * @return the Tag of this plugin.
    rem  */
    method public Tag getTag()
        methodret #tag!
    methodend
    
    rem /**
    rem  * Sets the given boolean value as the plugin's hasConfigurationProgram flag.
    rem  * This flag is used to determine if the plugin has or has not a configuration program.
    rem  * 
    rem  * @param hasConfigurationProgram! The boolean value to set.
    rem  */
    method public void setHasConfigurationProgram(boolean hasConfigurationProgram!)
        #hasConfigurationProgram! = hasConfigurationProgram!
    methodend
    
    rem /**
    rem  * Returns the boolean value indicating whether the plugin has a configuration program or not. 
    rem  * True is returned if it has a configuration program, else false is returned.
    rem  * 
    rem  * @return the boolean value indication whether the plugin has a configuration program or not.
    rem  */
    method public Boolean hasConfigurationProgram()
        methodret #hasConfigurationProgram!
    methodend

    method public String getDisplayName()
        methodret #displayName!
    methodend

    method public void setDisplayName(String displayName!)
        #displayName! = displayName!
    methodend
    
classend